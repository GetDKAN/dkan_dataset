<?php

/**
 * @file
 * Install file for DKAN Groups.
 */

/**
 * Implements hook_install().
 */
function dkan_dataset_groups_install() {
  // Disable selected views enabled by contributed modules.
  $views_disable = array(
    'og_extras_nodes' => TRUE,
  );
  variable_set('views_defaults', $views_disable);
}

/**
 * Implements hook_disable().
 */
function dkan_dataset_groups_disable() {
  //Remove field groups from the index.
  features_revert(array('dkan_sitewide_search_db' => array('search_api_index', 'search_api_server')));
}

/**
 * Update resources without groups with the same group from parent dataset.
 */
function dkan_dataset_groups_update_7000(&$sandbox) {
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['max'] = db_query("SELECT COUNT(DISTINCT fdr.field_dataset_ref_target_id) FROM {node} n LEFT JOIN {field_data_field_dataset_ref} fdr ON fdr.entity_id=n.nid LEFT JOIN {og_membership} og ON n.nid=og.etid WHERE n.type='resource' AND og.etid IS NULL AND fdr.field_dataset_ref_target_id IN (SELECT etid FROM {og_membership} WHERE etid IN (SELECT field_dataset_ref_target_id FROM {field_data_field_dataset_ref}))")->fetchField();
  }

  //Get all resources witout group but the parent dataset has groups
  $result = db_query("SELECT fdr.field_dataset_ref_target_id FROM {node} n LEFT JOIN {field_data_field_dataset_ref fdr} ON fdr.entity_id=n.nid LEFT JOIN {og_membership} og ON n.nid=og.etid WHERE n.type='resource' AND og.etid IS NULL AND fdr.field_dataset_ref_target_id IN (SELECT etid FROM {og_membership} WHERE etid IN (SELECT field_dataset_ref_target_id FROM {field_data_field_dataset_ref})) LIMIT 0,10");

  foreach ($result as $item) {
    //Simulate a empty original
    $original = new stdClass();
    $original->type = 'dataset';
    $original->og_group_ref = array(); 
    $dataset = node_load($item->field_dataset_ref_target_id);
    $dataset->original = $original;
    dkan_dataset_sync_groups($dataset);
    $sandbox['progress']++;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

  return t('All resources without group were updated.');

  throw new DrupalUpdateException('Something went wrong; Please check your resources and verify the groups is the same from dataset associated');
}
